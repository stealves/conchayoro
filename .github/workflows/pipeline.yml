name: conchayoro-pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
      - name: frontend install
        run: npm --prefix frontend install
      - name: frontend build
        run: npm --prefix frontend run build
      - name: upload frontend build
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: frontend/.next/server/app
  
  deploy_homologation:
    runs-on: ubuntu-latest
    needs: build
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      AWS_EC2_METADATA_DISABLED: true
      HOMOLOGATION_BUCKET_S3: ${{ vars.HOMOLOGATION_BUCKET_S3 }}
      
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: frontend/.next/server/app
      - name: Publish to Homologation
        run: aws s3 cp frontend/.next/server/app s3://$HOMOLOGATION_BUCKET_S3 --recursive --acl public-read
        
  deploy_production:
    if: "contains(github.event.head_commit.message, '[production]')"
    runs-on: ubuntu-latest
    needs: build
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      AWS_EC2_METADATA_DISABLED: true
      PRODUCTION_BUCKET_S3: ${{ vars.PRODUCTION_BUCKET_S3 }}
      
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: frontend/.next/server/app
      - name: Publish to Homologation
        run: aws s3 cp frontend/.next/server/app s3://$PRODUCTION_BUCKET_S3 --recursive --acl public-read
